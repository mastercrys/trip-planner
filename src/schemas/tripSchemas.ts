export const searchSchema = {
  querystring: {
    type: "object",
    required: ["origin", "destination", "sort_by"],
    properties: {
      origin: {
        type: "string",
        minLength: 3,
        maxLength: 3,
        enum: [
          "ATL",
          "PEK",
          "LAX",
          "DXB",
          "HND",
          "ORD",
          "LHR",
          "PVG",
          "CDG",
          "DFW",
          "AMS",
          "FRA",
          "IST",
          "CAN",
          "JFK",
          "SIN",
          "DEN",
          "ICN",
          "BKK",
          "SFO",
          "LAS",
          "CLT",
          "MIA",
          "KUL",
          "SEA",
          "MUC",
          "EWR",
          "MAD",
          "HKG",
          "MCO",
          "PHX",
          "IAH",
          "SYD",
          "MEL",
          "GRU",
          "YYZ",
          "LGW",
          "BCN",
          "MAN",
          "BOM",
          "DEL",
          "ZRH",
          "SVO",
          "DME",
          "JNB",
          "ARN",
          "OSL",
          "CPH",
          "HEL",
          "VIE",
        ],
        errorMessage: {
          enum: "Origin must be one of the valid codes.",
          minLength: "Origin must be exactly 3 characters long.",
          maxLength: "Origin must be exactly 3 characters long.",
        },
      },
      destination: {
        type: "string",
        minLength: 3,
        maxLength: 3,
        enum: [
          "ATL",
          "PEK",
          "LAX",
          "DXB",
          "HND",
          "ORD",
          "LHR",
          "PVG",
          "CDG",
          "DFW",
          "AMS",
          "FRA",
          "IST",
          "CAN",
          "JFK",
          "SIN",
          "DEN",
          "ICN",
          "BKK",
          "SFO",
          "LAS",
          "CLT",
          "MIA",
          "KUL",
          "SEA",
          "MUC",
          "EWR",
          "MAD",
          "HKG",
          "MCO",
          "PHX",
          "IAH",
          "SYD",
          "MEL",
          "GRU",
          "YYZ",
          "LGW",
          "BCN",
          "MAN",
          "BOM",
          "DEL",
          "ZRH",
          "SVO",
          "DME",
          "JNB",
          "ARN",
          "OSL",
          "CPH",
          "HEL",
          "VIE",
        ],
        errorMessage: {
          enum: "Origin must be one of the valid codes.",
          minLength: "Origin must be exactly 3 characters long.",
          maxLength: "Origin must be exactly 3 characters long.",
        },
      },
      sort_by: {
        type: "string",
        enum: ["fastest", "cheapest"],
        errorMessage: {
          enum: "Sort_by must be either 'fastest' or 'cheapest'.",
        },
      },
    },
    errorMessage: {
      required: {
        origin: "Origin is required.",
        destination: "Destination is required.",
        sort_by: "Sort_by is required.",
      },
    },
  },
};

export const saveTripSchema = {
  body: {
    type: "object",
    required: [
      "origin",
      "destination",
      "cost",
      "duration",
      "type",
      "id",
      "display_name",
    ],
    properties: {
      origin: { type: "string", minLength: 3, maxLength: 3 },
      destination: { type: "string", minLength: 3, maxLength: 3 },
      cost: { type: "number", minimum: 0 },
      duration: { type: "number", minimum: 0 },
      type: { type: "string" },
      id: { type: "string" },
      display_name: { type: "string" },
    },
  },
};

export const listTripsSchema = {
  querystring: {
    type: "object",
    properties: {
      page: { type: "integer", minimum: 1 },
      limit: { type: "integer", minimum: 1, maximum: 100 },
    },
  },
};

export const deleteTripSchema = {
  params: {
    type: "object",
    required: ["id"],
    properties: {
      id: { type: "string" },
    },
  },
};

export const getTripStatsSchema = {
  response: {
    200: {
      type: "object",
      properties: {
        totalTrips: { type: "number" },
        avgCost: { type: "number" },
        avgDuration: { type: "number" },
        popularDestinations: {
          type: "array",
          items: {
            type: "object",
            properties: {
              _id: { type: "string" },
              count: { type: "number" },
            },
          },
        },
      },
    },
  },
};
